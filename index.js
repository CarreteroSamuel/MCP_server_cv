#!/usr/bin/env node

import { Server } from '@modelcontextprotocol/sdk/server/index.js';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';
import {
  CallToolRequestSchema,
  ListPromptsRequestSchema,
  GetPromptRequestSchema,
  ListToolsRequestSchema,
} from '@modelcontextprotocol/sdk/types.js';

// Donn√©es personnelles de Samuel Carretero
const PERSONAL_INFO = `
üßë Informations Personnelles
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üë§ Nom: Samuel CARRETERO
üìß Email: carretero.samuel@gmail.com
üì± T√©l√©phone: 079 761 51 07
üè† Adresse: Route Neuve 9, 1563 Dompierre, Suisse
üéÇ Date de naissance: 22 f√©vrier 1991
üíº Poste actuel: Ing√©nieur en Informatique
üè¢ Derni√®re entreprise: Arc Logiciels SA, Yverdon (d√©cembre 2024)
üåç Nationalit√©: Espagnol
üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Situation familiale: Mari√©, 2 enfants
üìö Formation actuelle: Master of Blockchain Engineering (2025)
üéì √âtablissement: CodeCrypto Academy
`;

// Comp√©tences et exp√©riences de Samuel Carretero
const SKILLS_INFO = `
üöÄ Comp√©tences Techniques de Samuel CARRETERO
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üíª **Langages de Programmation**
‚îú‚îÄ Java ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ C/C++ ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ C# ‚≠ê‚≠ê‚≠ê
‚îú‚îÄ QT ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ JavaScript/TypeScript ‚≠ê‚≠ê‚≠ê
‚îî‚îÄ Powerbuilder ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îî‚îÄ Python ‚≠ê‚≠ê

üåê **D√©veloppement Web & Mobile**
‚îú‚îÄ Frontend
‚îÇ  ‚îú‚îÄ Svelte ‚≠ê‚≠ê‚≠ê
‚îÇ  ‚îú‚îÄ React ‚≠ê‚≠ê‚≠ê‚≠ê
‚îÇ  ‚îú‚îÄ AngularJS ‚≠ê‚≠ê
‚îÇ  ‚îî‚îÄ HTML/JSON/XML ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Backend
‚îÇ  ‚îú‚îÄ Node.js ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îÇ  ‚îú‚îÄ Play Framework ‚≠ê‚≠ê‚≠ê
‚îÇ  ‚îî‚îÄ JEE ‚≠ê‚≠ê‚≠ê‚≠ê
‚îî‚îÄ Mobile
   ‚îî‚îÄ Android ‚≠ê‚≠ê‚≠ê

üñ•Ô∏è **Syst√®mes & Embarqu√©**
‚îú‚îÄ Linux ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Yocto ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ i.MX ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Raspberry Pi ‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Nvidia Jetson ‚≠ê‚≠ê
‚îú‚îÄ Router Openwrt ‚≠ê‚≠ê‚≠ê
‚îî‚îÄ Scripts Shell ‚≠ê‚≠ê‚≠ê‚≠ê

ü§ñ **Robotique & IoT**
‚îú‚îÄ Robots (Meca500) ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Objets connect√©s ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Capteurs & Servomoteurs ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Cam√©ras ‚≠ê‚≠ê‚≠ê‚≠ê
‚îî‚îÄ UPS ‚≠ê‚≠ê‚≠ê‚≠ê

üì° **Protocoles & Communication**
‚îú‚îÄ TCP/IP ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ OPC UA ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ I2C/SPI/UART ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ RS232/RS485 ‚≠ê‚≠ê‚≠ê‚≠ê
‚îî‚îÄ REST APIs ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê

üîß **Outils & Technologies**
‚îú‚îÄ Docker ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Jenkins ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Redmine ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ N8N ‚≠ê‚≠ê‚≠ê
‚îú‚îÄ MCP ‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Agents IA ‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ SQL ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ UML ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îî‚îÄ Services FireDaemon ‚≠ê‚≠ê‚≠ê‚≠ê

üéì **Formations & Certifications**
‚îú‚îÄ Master Blockchain Engineering (2025) - CodeCrypto Academy
‚îú‚îÄ Bachelor of Science HES-SO (2014) - HEIA-FR
‚îú‚îÄ Maturit√© professionnelle technique (2011) - EMF
‚îî‚îÄ CFC d'informaticien (2010) - EMF

üíº **Exp√©riences Cl√©s**
‚îú‚îÄ Consultant/D√©veloppeur - Arc Logiciels SA (2021-2024)
‚îÇ  ‚îî‚îÄ Responsable des objets connect√©s
‚îÇ  ‚îî‚îÄ D√©veloppement d'applications
‚îÇ  ‚îî‚îÄ Consulting chez les clients
‚îÇ  ‚îî‚îÄ Installation et mise √† jour sur les serveurs
‚îú‚îÄ Ing√©nieur Informatique Industrielle - L√©cureux SA (2016-2021)
‚îÇ  ‚îî‚îÄ Responsable des images Linux, Yocto
‚îÇ  ‚îî‚îÄ D√©veloppement embarqu√©
‚îÇ  ‚îî‚îÄ Robotique
‚îî‚îÄ Projets notables
   ‚îú‚îÄ Mobile App Deep Sudoku (2014) - R√©seaux de neurones
   ‚îî‚îÄ Eurobot 2014 - Tournois europ√©enne de robotique


üåç **Langues**
‚îú‚îÄ Fran√ßais ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (Langue maternelle)
‚îú‚îÄ Espagnol ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (Langue maternelle)
‚îî‚îÄ Anglais ‚≠ê‚≠ê‚≠ê (B2)

üéØ **Qualit√©s Personnelles**
‚îú‚îÄ Polyvalent ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ M√©thodique ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Autonome ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îú‚îÄ Communicatif ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
‚îî‚îÄ Adaptabilit√© ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê

üé™ **Centres d'Int√©r√™t**
‚îú‚îÄ Veille technologique
‚îú‚îÄ Bricolage & DIY
‚îú‚îÄ Temps en famille
‚îú‚îÄ Jeux de strat√©gie/cartes
‚îî‚îÄ Lecture de mangas

‚≠ê L√©gende: ‚≠ê = Notions | ‚≠ê‚≠ê = D√©butant | ‚≠ê‚≠ê‚≠ê = Interm√©diaire | ‚≠ê‚≠ê‚≠ê‚≠ê = Avanc√© | ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê = Expert
`;

class SamuelCarreteroMCPServer {
  constructor() {
    this.server = new Server(
      {
        name: 'samuel-carretero-mcp-server',
        version: '1.0.0',
      },
      {
        capabilities: {
          prompts: {},
          tools: {},
        },
      }
    );

    this.setupHandlers();
  }

  setupHandlers() {
    // Handler pour lister les prompts disponibles
    this.server.setRequestHandler(ListPromptsRequestSchema, async () => {
      return {
        prompts: [
          {
            name: 'informations-personnelles',
            description: 'R√©cup√®re les informations personnelles de Samuel Carretero',
            arguments: [],
          },
          {
            name: 'skills',
            description: 'Affiche le profil d√©taill√© des comp√©tences techniques, exp√©riences et formations de Samuel Carretero',
            arguments: [],
          },
        ],
      };
    });

    // Handler pour r√©cup√©rer un prompt sp√©cifique
    this.server.setRequestHandler(GetPromptRequestSchema, async (request) => {
      const { name } = request.params;

      switch (name) {
        case 'informations-personnelles':
          return {
            description: 'Prompt pour r√©cup√©rer les informations personnelles de Samuel Carretero',
            messages: [
              {
                role: 'user',
                content: {
                  type: 'text',
                  text: 'Utilise l\'outil get_personal_info pour r√©cup√©rer les informations personnelles de Samuel Carretero et les afficher de mani√®re claire et organis√©e.',
                },
              },
            ],
          };

        case 'skills':
          return {
            description: 'Prompt pour afficher les comp√©tences de Samuel Carretero',
            messages: [
              {
                role: 'user',
                content: {
                  type: 'text',
                  text: 'Utilise l\'outil get_skills pour r√©cup√©rer la liste compl√®te des comp√©tences techniques et exp√©riences de Samuel Carretero et les pr√©senter de mani√®re structur√©e et visuellement attrayante.',
                },
              },
            ],
          };

        default:
          throw new Error(`Prompt inconnu: ${name}`);
      }
    });

    // Handler pour lister les outils disponibles
    this.server.setRequestHandler(ListToolsRequestSchema, async () => {
      return {
        tools: [
          {
            name: 'get_personal_info',
            description: 'R√©cup√®re les informations personnelles de Samuel Carretero (nom, email, t√©l√©phone, adresse, etc.)',
            inputSchema: {
              type: 'object',
              properties: {},
              required: [],
            },
          },
          {
            name: 'get_skills',
            description: 'R√©cup√®re le profil complet des comp√©tences techniques, exp√©riences et formations de Samuel Carretero',
            inputSchema: {
              type: 'object',
              properties: {},
              required: [],
            },
          },
        ],
      };
    });

    // Handler pour ex√©cuter les outils
    this.server.setRequestHandler(CallToolRequestSchema, async (request) => {
      const { name } = request.params;

      switch (name) {
        case 'get_personal_info':
          return {
            content: [
              {
                type: 'text',
                text: 'Voici les informations personnelles de Samuel Carretero :\n\n' + PERSONAL_INFO,
              },
            ],
          };

        case 'get_skills':
          return {
            content: [
              {
                type: 'text',
                text: 'Voici le profil complet des comp√©tences et exp√©riences de Samuel Carretero :\n\n' + SKILLS_INFO,
              },
            ],
          };

        default:
          throw new Error(`Outil inconnu: ${name}`);
      }
    });
  }

  async run() {
    const transport = new StdioServerTransport();
    await this.server.connect(transport);
    console.error('Serveur MCP Samuel Carretero - Informations personnelles d√©marr√©');
  }
}

// D√©marrage du serveur
const server = new SamuelCarreteroMCPServer();
server.run().catch(console.error);